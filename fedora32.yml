- name: Setup new fedora 32 machine
  hosts: localhost
  become: true
  tasks:

  - name: Set hostname
    hostname:
      name: jaxps.sevolutivo.ec

  - name: Update all packages
    dnf:
      name: '*'
      state: latest

  - name: Install RPM Fusion Free repository
    dnf:
      name: https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-32.noarch.rpm
      state: present

  - name: Install RPM Fusion Non Free repository
    dnf:
      name: https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-32.noarch.rpm
      state: present

  - name: Install required packages
    dnf:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
        - digikam
        - gimp
        - sysstat
        - keepassx
        - java-1.8.0-openjdk-devel
        - lm_sensors
        - gnome-shell-extension-pomodoro
        - gnome-tweaks
        - xclip
        - chromium
        - podman-compose
        - nmap
        - httpie
        - virt-manager
        - libvirt-client
        - vlc
        - ffmpeg
        - fuse-exfat
        - exfat-utils
        - git-extras
        - java-11-openjdk
        - java-11-openjdk-devel
        - hdparm
        - fzf

  - name: Install Fedora Workstation repository
    dnf:
      name: fedora-workstation-repositories
      state: present
  
  - name: Enable Chrome repository
    shell: dnf config-manager --set-enabled google-chrome

  - name: Install Chrome
    dnf:
      name: google-chrome-stable
      state: present

  - name: Create Oracle Java 8 home dir
    file:
      path: /opt/java
      state: directory
      owner: jorge
      group: jorge

  - name: Find Oracle Java 8 tar file
    find:
      paths: files
      patterns: jdk-8u*-linux-x64.tar.gz
    register: java

  - name: Unpack Oracle Java 8
    unarchive:
      src: "{{ item.path }}"
      dest: /opt/java
      owner: jorge
      group: jorge
    with_items: "{{ java.files }}"

  - name: Find Java 8 directory
    find:
      paths: /opt/java
      patterns: 'jdk1.8.0_*'
      file_type: directory
    register: java_dir

  - name: Create Java 8 symbolic link 
    file:
      src: "{{ item.path }}"
      dest: "/opt/java/jdk1.8"
      state: link
    with_items: "{{ java_dir.files }}"
  
  - name: Create SoapUI home dir
    file:
      path: /opt/soapui
      state: directory
      owner: jorge
      group: jorge  

  - name: Find SoapUI tar file
    find:
      paths: files
      patterns: SoapUI-5.*-linux-bin.tar.gz 
    register: soapui

  - name: Unpack SoapUI
    unarchive:
      src: "{{ item.path }}"
      dest: /opt/soapui
      owner: jorge
      group: jorge
    with_items: "{{ soapui.files }}"
  
  - name: Find SoapUI directory
    find:
      paths: /opt/soapui
      patterns: 'SoapUI-5.*'
      file_type: directory
    register: soapui_dir

  - name: Create SoapUI symbolic link 
    file:
      src: "{{item.path}}/bin/soapui.sh"
      dest: "/usr/local/bin/soapui.sh"
      state: link
    with_items: "{{ soapui_dir.files }}"
  
  - name: Import VSC key
    rpm_key:
      state: present
      key: https://packages.microsoft.com/keys/microsoft.asc

  - name: Create VSC repo
    yum_repository:
      name: code
      description: Visual Studio Code
      baseurl: https://packages.microsoft.com/yumrepos/vscode
      gpgcheck: yes
      gpgkey: https://packages.microsoft.com/keys/microsoft.asc

  - name: Install VSC
    dnf:
      name: code
      state: present

  - name: Create SQL Developer home dir
    file:
      path: /opt/sqldeveloper
      state: directory
      owner: jorge
      group: jorge

  - name: Find SQL Developer zip file
    find:
      paths: files
      patterns: sqldeveloper-19.*-no-jre.zip 
    register: sqldeveloper

  - name: Unpack SQL Developer
    unarchive:
      src: "{{ item.path }}"
      dest: /opt/sqldeveloper
      owner: jorge
      group: jorge
    with_items: "{{ sqldeveloper.files }}"
    
  - name: Create SQL Developer script
    copy:
      dest: /usr/local/bin/sqldeveloper.sh
      owner: jorge
      group: jorge
      mode: u+x
      content: |
        #!/bin/bash
        cd /opt/sqldeveloper/sqldeveloper/
        ./sqldeveloper.sh

  - name: Install Node.js
    dnf:
      name: nodejs
      state: present

  - name: Install JHipster generator
    npm:
      name: generator-jhipster
      global: yes

  - name: Install yo
    npm:
      name: yo
      global: yes

  - name: Create IntelliJ home dir
    file:
      path: /opt/idea
      state: directory
      owner: jorge
      group: jorge

  - name: Find IntelliJ tar file
    find:
      paths: files
      patterns: ideaIU-*.tar.gz
    register: intellij

  - name: Unpack IntelliJ
    unarchive:
      src: "{{ item.path }}"
      dest: /opt/idea
      owner: jorge
      group: jorge
    with_items: "{{ intellij.files }}"

  - name: Change setting in Sysctl for Inotify Watches Limit (required for IntelliJ)
    lineinfile:
      dest: /etc/sysctl.conf
      line: fs.inotify.max_user_watches = 524288

  - name: Apply Sysctl changes
    shell: sysctl -p --system

  - name: VirtualBox repo
    get_url:
      url: http://download.virtualbox.org/virtualbox/rpm/fedora/virtualbox.repo
      dest: /etc/yum.repos.d/

  - name: Install required packages for VirtualBox
    dnf:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
        - dkms
        - kernel-devel
        - make
        - patch

  - name: Install VirtualBox
    dnf:
      name: VirtualBox-6.1
      state: present

  - name: Enable nvidia drivers repo
    shell: dnf config-manager --set-enabled rpmfusion-nonfree-nvidia-driver

  - name: Negativo17 repo
    get_url:
      url: https://negativo17.org/repos/fedora-nvidia.repo
      dest: /etc/yum.repos.d/

  - name: Install cowsay and fortune-mod
    dnf:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
        - cowsay
        - fortune-mod

  - name: Configure Flatpak
    shell: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

  - name: Install Spotify via Flatpak
    flatpak:
      name: com.spotify.Client
      state: present
      remote: flathub

  - name: Enable H.264 repository
    shell: dnf config-manager --set-enabled fedora-cisco-openh264

  - name: Install H.264 codec
    dnf:
      name: gstreamer1-plugin-openh264
      state: present

  - name: Create myfiles and vm directories
    file:
      path: "/mnt/{{ item }}"
      state: directory
    with_items: ["myfiles", "vm"]

  - name: Mount LVs
    ansible.posix.mount:
      path: "/mnt/{{ item }}"
      src: "/dev/files/{{ item }}"
      fstype: ext4
      state: mounted
    with_items: ["myfiles", "vm"]
   
  - name: Create symbolic links
    file:
      src: "/mnt/myfiles/{{ item }}"
      dest: "/home/jorge/{{ item }}"
      force: true
      state: link
    with_items: ["123","Documents","Downloads","Dropbox","Pictures","Projects"]

  - name: Set Java 11 as default
    shell: alternatives --set java java-11-openjdk.x86_64

  - name: Set Java JDK 11 as default
    shell: alternatives --set javac java-11-openjdk.x86_64